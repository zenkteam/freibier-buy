{"version":3,"sources":["config.ts","tracker.tsx","components/ConnectWallet.tsx","components/DisconnectWallet.tsx","publish.ts","components/ExchangeForm.tsx","components/LineChart.tsx","PriceChart.tsx","App.tsx","components/Clock.tsx","components/PenaltyInfo.tsx","components/DepositModal.tsx","components/WithdrawModal.tsx","services/farmContract.ts","Farm.tsx","index.tsx"],"names":["config","network","NetworkType","MAINNET","rpcUrl","defaultTezPrice","last_updated_at","usd","usd_24h_change","usd_24h_vol","usd_market_cap","defaultTokenPrice","storageLimitSurcharge","lpTokenDecimals","FLORENCENET","CUSTOM","Tracker","trackEvent","name","params","gtag","window","ConnectButton","Tezos","setWallet","setUserAddress","setBeaconConnection","setPublicToken","wallet","showNano","useState","loadingWallet","setLoadingWallet","loadingNano","setLoadingNano","setup","userAddress","a","connectWallet","type","requestPermissions","getPKH","setWalletProvider","console","error","connectNano","TransportU2F","create","transport","ledgerSigner","LedgerSigner","setSignerProvider","signer","publicKeyHash","useEffect","BeaconWallet","preferredNetwork","disableDefaultEvents","eventHandlers","BeaconEvent","PAIR_INIT","handler","defaultEventCallbacks","PAIR_SUCCESS","data","publicKey","client","getActiveAccount","className","id","style","width","onClick","disabled","DisconnectButton","setTezos","disconnectWallet","tezosTK","TezosToolkit","removeAllAccounts","removeAllPeers","destroy","attachToElements","content","priceChangeNode","document","getElementsByClassName","length","innerHTML","publishEvent","eventName","event","CustomEvent","bubbles","detail","dispatchEvent","Publish","userTokenBalance","tokenBalance","tokenSymbol","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","userBalance","balance","tokenPriceChange","change","pricePerTez","price","minimumSignificantDigits","maximumSignificantDigits","pricePerUsd","ExchangeForm","contract","tokenDetails","updateUserBalance","updateUserTokenBalance","setStorage","storage","tezUsd","setTezUsd","tokenUsd","setTokenUsd","tokenTezPriceYesterday","setTokenTezPriceYesterday","tezPool","setTezPool","tokenPool","setTokenPool","amountTez","setAmountTez","amountTezDollar","setAmountTezDollar","amountToken","setAmountToken","amountTokenDollar","setAmountTokenDollar","loadingBuy","setLoadingBuy","useDollar","setUseDollar","tezMultiplyer","tokenMultiplyer","decimals","round","value","amount","Math","userChangeTez","amount_tez","amount_token","onChangeTezDollar","amount_tez_dollar","userChangeTezDollar","abs","parseFloat","target","onChangeToken","userChangeToken","fetch","then","res","json","tezos","tez_pool","toNumber","token_pool","timestamp","Date","setDate","getDate","timestampString","toISOString","swapContract","find","item","tokenUsdNew","buy","symbol","minToken","methods","tezToTokenPayment","send","storageLimit","mutez","op","confirmation","newStorage","data-name","placeholder","step","onChange","e","required","position","left","top","color","paddingRight","paddingLeft","backgroundColor","textAlign","loading","alt","src","background","borderRadius","padding","marginLeft","fontSize","lineHeight","cursor","thumbnailUri","LineChart","height","numberOfHorizontalGuides","horizontalGuides","numberOfVerticalGuides","verticalGuides","precision","FONT_SIZE","maximumXFromData","max","map","x","maximumYFromData","y","digits","toString","toFixed","chartWidth","chartHeight","points","element","join","Axis","fill","stroke","strokeWidth","XAxis","YAxis","viewBox","filter","label","index","fontFamily","LabelsXAxis","PARTS","Array","_","yCoordinate","LabelsYAxis","guideCount","startY","endY","xCoordinate","Fragment","VerticalGuides","startX","endX","HorizontalGuides","defaultProps","PriceChart","tokenDecimals","setData","rate","process_pool_data","reverse","substr","App","setContract","setUserBalance","setUserTokenBalance","showTokenomics","setShowTokenomics","showDisclaimer","setShowDisclaimer","setTokenDetails","at","newContract","initTokenContract","token_address","coinContract","assets","token_metadata","get","metdata","totalSupply","parseInt","total_supply","bytes2Char","description","shouldPreferSymbol","coinContractAddress","initContract","updateTokenBalance","useCallback","url","balances","coin","updateBalance","tz","getBalance","warn","interval","setInterval","clearInterval","transform","transformStyle","transition","display","opacity","Clock","since","durationInSeconds","setCount","intervalRef","useRef","current","count","total","remaining","floor","getTime","now","getCount","hours","minutes","prefixMinutes","seconds","prefixSeconds","renderTime","PenaltyInfo","penalty","personalLastUpdate","penaltyTimeString","penaltyHours","periodSeconds","dividedBy","penaltyDays","mod","isZero","gt","feePercentage","DepositModal","hideDepositModal","depositValue","setDepositValue","personalMaxDeposit","personalStake","deposit","depositing","BigNumber","right","bottom","zIndex","stopPropagation","onSubmit","preventDefault","inputMode","pattern","parsed","replaceAll","parseDepositValue","data-wait","WithdrawModal","hideWithdrawModal","withdrawValue","setWithdrawValue","withdraw","withdrawing","parseWithdrawValue","estimateAPR","farmStorage","swapStorage","blockReward","farm","plannedRewards","rewardPerBlock","blocksPerYear","getTotalStaked","totalStaked","swapTokenPool","swapTotalSupply","cvzaYearlyReward","multipliedBy","cvzaStaked","APR","debug","updateAccumulatedRewardPerShare","lastBlockUpdate","rpc","getBlockHeader","currentLevel","level","multiplier","minus","outstandingReward","claimedRewards","paid","plus","unpaid","totalRewards","totalBlocks","totalRewardsExhausted","isGreaterThan","reward","accumulatedRewardPerShare","div","farmLpTokenBalance","delegatorRecord","pkh","delegatorAddress","delegators","lastUpdate","delegatorReward","accRewardPerShareStart","accumulatedRewardPerShareStart","accRewardPerShareEnd","accRewardPerShare","lpTokenBalance","shiftedBy","isNaN","getPersonalStake","getPersonalMaxDeposit","ledger","user","hasOperator","farmContractInstance","allowances","farmContactIsOperator","includes","address","tokenFA2AddOperator","swapContractInstance","update_operators","add_operator","owner","operator","token_id","performDeposit","contractIsOperator","depositOperation","addOperatorTransactionPromise","batch","withContractCall","tx","performWithdraw","performClaim","claim","UnitValue","initialFarm","startDate","endDate","personalUnclaimedReward","fromSymbol","fromDecimals","toSymbol","toDecimals","Farm","farmContractAddress","swapContractAddress","setSwapContractInstance","setFarmContractInstance","setSwapStorage","setFarmStorage","setFarm","unstakeValue","setUnstakeValue","depoiting","setDepoiting","claiming","setClaiming","setWithdrawing","showDepositModal","setShowDepositModal","showWithdrawModal","setShowWithdrawModal","initSwapContract","contractInstance","initFarmContract","updateSwapStorage","newSwapStorage","updateFarmStorage","newFarmStorage","updateFarmState","delegator","update","Object","assign","decimalPlaces","ROUND_DOWN","data-w-id","data-animation-type","data-src","data-loop","data-direction","data-autoplay","data-is-ix2-target","data-renderer","data-default-duration","data-duration","toDateString","whiteSpace","appNode","getElementById","dataset","ReactDOM","render","StrictMode","priceChartNode","farmNode","farmContract"],"mappings":"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","file":"static/js/main.30b5e83c.chunk.js","sourcesContent":["import { NetworkType } from \"@airgap/beacon-sdk\";\n\nconst config = {\n  network: NetworkType.MAINNET,\n  rpcUrl: \"\",\n  defaultTezPrice: {\n    last_updated_at: 1621264908,\n    usd: 5.24,\n    usd_24h_change: -10.701803732742505,\n    usd_24h_vol: 410319278.74019855,\n    usd_market_cap: 4367588701.058423,\n  },\n  defaultTokenPrice: {\n    last_updated_at: 1621264908,\n    usd: 0.0,\n    usd_24h_change: 0,\n    usd_24h_vol: 0,\n    usd_market_cap: 0,\n  },\n  storageLimitSurcharge: 1.2, // multiplier\n  lpTokenDecimals: 1000000\n};\n\nswitch (config.network) {\n  case NetworkType.MAINNET:\n    config.rpcUrl = \"https://rpc.tzbeta.net/\"; // \"https://mainnet.smartpy.io/\";\n    break;\n  case NetworkType.FLORENCENET:\n    config.rpcUrl = \"https://rpc.florence.tzstats.com/\";\n    break;\n  case NetworkType.CUSTOM:\n    config.rpcUrl = \"http://localhost:8732/\";\n    break;\n}\n\nexport default config;\n","const Tracker = {\n    trackEvent: function (name: string, params: any) {\n        const gtag = (window as any).gtag;\n        if (gtag) {\n            gtag(name, params);\n        }\n    }\n}\n\nexport default Tracker;","import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { BeaconEvent, defaultEventCallbacks } from \"@airgap/beacon-sdk\";\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport { LedgerSigner } from \"@taquito/ledger-signer\";\nimport config from '../config';\nimport Tracker from '../tracker';\n\ntype ButtonProps = {\n  Tezos: TezosToolkit;\n  setWallet: Dispatch<SetStateAction<any>>;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setBeaconConnection?: Dispatch<SetStateAction<boolean>>;\n  setPublicToken?: Dispatch<SetStateAction<string | null>>;\n  wallet: BeaconWallet;\n  showNano?: boolean;\n};\n\nconst ConnectButton = ({\n  Tezos,\n  setWallet,\n  setUserAddress,\n  setBeaconConnection,\n  setPublicToken,\n  wallet,\n  showNano = true,\n}: ButtonProps): JSX.Element => {\n  const [loadingWallet, setLoadingWallet] = useState<boolean>(false);\n  const [loadingNano, setLoadingNano] = useState<boolean>(false);\n\n  const setup = async (userAddress: string): Promise<void> => {\n    setUserAddress(userAddress);\n  };\n\n  const connectWallet = async (): Promise<void> => {\n    try {\n      setLoadingWallet(true);\n      Tracker.trackEvent('connect_start', { type: 'wallet'});\n      await wallet.requestPermissions({\n        network: {\n          type: config.network,\n          rpcUrl: config.rpcUrl,\n        }\n      });\n      // gets user's address\n      const userAddress = await wallet.getPKH();\n      await setup(userAddress);\n      if (setBeaconConnection) setBeaconConnection(true);\n      Tezos.setWalletProvider(wallet);\n      Tracker.trackEvent('connect_success', { type: 'wallet'});\n    } catch (error) {\n      console.error(error);\n      setLoadingWallet(false);\n    }\n  };\n\n  const connectNano = async (): Promise<void> => {\n    try {\n      setLoadingNano(true);\n      Tracker.trackEvent('connect_start', { type: 'nano'});\n      const transport = await TransportU2F.create();\n      const ledgerSigner = new LedgerSigner(transport, \"44'/1729'/0'/0'\", true);\n\n      Tezos.setSignerProvider(ledgerSigner);\n\n      //Get the public key and the public key hash from the Ledger\n      const userAddress = await Tezos.signer.publicKeyHash();\n      await setup(userAddress);\n      Tracker.trackEvent('connect_success', { type: 'nano'});\n    } catch (error) {\n      console.error(\"Error!\", error);\n      setLoadingNano(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // creates a wallet instance\n      const wallet = new BeaconWallet({\n        name: \"Widget\",\n        preferredNetwork: config.network,\n        disableDefaultEvents: true, // Disable all events / UI. This also disables the pairing alert.\n        eventHandlers: {\n          // To keep the pairing alert, we have to add the following default event handlers back\n          [BeaconEvent.PAIR_INIT]: {\n            handler: defaultEventCallbacks.PAIR_INIT\n          },\n          [BeaconEvent.PAIR_SUCCESS]: {\n            handler: data => {\n              if (setPublicToken) setPublicToken(data.publicKey)\n            }\n          }\n        }\n      });\n      Tezos.setWalletProvider(wallet);\n      setWallet(wallet);\n      // checks if wallet was connected before\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        const userAddress = await wallet.getPKH();\n        await setup(userAddress);\n        if (setBeaconConnection) setBeaconConnection(true);\n      }\n    })();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <button className=\"button long-submit-button bg-primary-4 w-button\" id=\"connectWallet\" style={{width: '100%'}} onClick={connectWallet}>\n        {loadingWallet ? (\n          <span>\n            Confirm Connection\n          </span>\n        ) : (\n          <span>\n            Connect Wallet\n          </span>\n        )}\n      </button>\n\n      { showNano &&\n        <button className=\"button long-submit-button w-button secondary\" id=\"connectWallet\" disabled={loadingNano} onClick={connectNano}>\n          {loadingNano ? (\n            <span>\n              Loading, please wait\n            </span>\n          ) : (\n            <span>\n              Connect Ledger Nano\n            </span>\n          )}\n        </button>\n      }\n    </>\n  );\n};\n\nexport default ConnectButton;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport config from \"./../config\";\n\ninterface ButtonProps {\n  wallet: BeaconWallet | null;\n  setPublicToken?: Dispatch<SetStateAction<string | null>>;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setWallet: Dispatch<SetStateAction<any>>;\n  setTezos: Dispatch<SetStateAction<TezosToolkit>>;\n  setBeaconConnection?: Dispatch<SetStateAction<boolean>>;\n}\n\nconst DisconnectButton = ({\n  wallet,\n  setPublicToken,\n  setUserAddress,\n  setWallet,\n  setTezos,\n  setBeaconConnection\n}: ButtonProps): JSX.Element => {\n  const disconnectWallet = async (): Promise<void> => {\n    setUserAddress('');\n    setWallet(null);\n    const tezosTK = new TezosToolkit(config.rpcUrl);\n    setTezos(tezosTK);\n    if (setBeaconConnection) setBeaconConnection(false);\n    if (setPublicToken) setPublicToken(null);\n\n    if (wallet) {\n      await wallet.client.removeAllAccounts();\n      await wallet.client.removeAllPeers();\n      await wallet.client.destroy();\n    }\n  };\n\n  return (\n    <button className=\"button long-submit-button w-button secondary\" id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" onClick={disconnectWallet}>\n      Disconnect wallet\n    </button>\n  );\n};\n\nexport default DisconnectButton;\n","\nconst attachToElements = (className: string, content: string) => {\n  const priceChangeNode = document.getElementsByClassName(className);\n  if (priceChangeNode.length) {\n    for (const tag of priceChangeNode) {\n      tag.innerHTML = content;\n    }\n  }\n}\n\nconst publishEvent = (eventName: string, content: any) => {\n  const event = new CustomEvent(eventName,\n    {\n      bubbles: true,\n      detail: content\n    }\n  )\n  document.dispatchEvent(event);\n}\n\nconst Publish = {\n  userTokenBalance: function (tokenBalance: number, tokenSymbol: string) {\n    const content = (tokenBalance).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 }) + ' ' + tokenSymbol;\n    attachToElements('user-token-balance', content);\n    publishEvent('user-token-balance', tokenBalance);\n  },\n  userBalance: function (balance: number) {\n    const content = (balance).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 }) + ' ꜩ';\n    attachToElements('user-balance', content);\n    publishEvent('user-balance', balance);\n  },\n  tokenPriceChange: function (change: number) {\n    const content = (change).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + '%';\n    attachToElements('price-change-24h', content);\n    publishEvent('price-change-24h', change);\n  },\n  pricePerTez: function (price: number) {\n    const content = (price).toLocaleString(undefined, { minimumFractionDigits: 2, minimumSignificantDigits: 1, maximumSignificantDigits: 2 }) + ' ꜩ';\n    attachToElements('price-per-tez', content);\n    publishEvent('price-per-tez', price);\n  },\n  pricePerUsd: function (price: number) {\n    const content = '$' + (price).toLocaleString(undefined, { minimumFractionDigits: 2, minimumSignificantDigits: 1, maximumSignificantDigits: 3 });\n    attachToElements('price-per-usd', content);\n    publishEvent('price-per-usd', price);\n  },\n}\n\nexport default Publish;","import React, { useState, Dispatch, SetStateAction, useEffect } from \"react\";\nimport { TezosToolkit, WalletContract } from \"@taquito/taquito\";\nimport config from \"./../config\";\nimport Tracker from \"../tracker\";\nimport Publish from \"../publish\";\n\ninterface ExchangeFormProps {\n  contract: WalletContract | any;\n  tokenDetails: any;\n  updateUserBalance: Function;\n  updateUserTokenBalance: Function;\n  Tezos: TezosToolkit;\n  userAddress: string;\n  userBalance: number;\n  setStorage: Dispatch<SetStateAction<number>>;\n  storage: any;\n}\n\ninterface CoinGeckoPrice {\n  last_updated_at: number;\n  usd: number;\n  usd_24h_change: number;\n  usd_24h_vol: number;\n  usd_market_cap: number;\n}\n\nconst fee = 0.003;\nconst maxSlippage = 0.005;\nconst displayPositions = 2;\n\nconst ExchangeForm = ({ contract, tokenDetails, updateUserBalance, updateUserTokenBalance, Tezos, userAddress, userBalance, setStorage, storage }: ExchangeFormProps) => {\n\n  const [tezUsd, setTezUsd] = useState<CoinGeckoPrice>(config.defaultTezPrice);\n  const [tokenUsd, setTokenUsd] = useState<CoinGeckoPrice>(config.defaultTokenPrice);\n  const [tokenTezPriceYesterday, setTokenTezPriceYesterday] = useState<number>(0);\n  const [tezPool, setTezPool] = useState<number>(0);\n  const [tokenPool, setTokenPool] = useState<number>(0);\n\n  const [amountTez, setAmountTez] = useState<number>(0);\n  const [amountTezDollar, setAmountTezDollar] = useState<number>(0);\n  const [amountToken, setAmountToken] = useState<number>(0);\n  const [amountTokenDollar, setAmountTokenDollar] = useState<number>(0);\n\n  const [loadingBuy, setLoadingBuy] = useState<boolean>(false);\n  const [useDollar, setUseDollar] = useState<boolean>(false);\n\n  const tezMultiplyer = 10 ** 6;\n  const tokenMultiplyer = 10 ** (tokenDetails?.decimals || 6);\n\n  // https://www.coingecko.com/en/api#explore-api\n  useEffect(() => {\n    fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=tezos&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\")\n      .then(res => res.json())\n      .then(res => setTezUsd(res.tezos))\n  }, [])\n\n  // set pool size\n  useEffect(() => {\n    if (storage) {\n      setTezPool(storage.storage.tez_pool.toNumber() / tezMultiplyer);\n      setTokenPool(storage.storage.token_pool.toNumber() / tokenMultiplyer);\n    }\n  }, [storage, tezMultiplyer, tokenMultiplyer])\n\n  // tez price\n  useEffect(() => {\n    if (tokenDetails) {\n      const timestamp = new Date();\n      timestamp.setDate(timestamp.getDate() - 1);\n      const timestampString = timestamp.toISOString();\n      const limit = 700; // max: 1000\n      fetch(`https://api.tzkt.io/v1/contracts/${tokenDetails.swapContract}/storage/history?limit=${limit}`)\n        .then(res => res.json())\n        .then(data => data.find((item: any) => item.timestamp < timestampString))\n        .then(item => {\n          if (item && item.value) {\n            const tez_pool = parseFloat(item.value.storage.tez_pool) / tezMultiplyer;\n            const token_pool = parseFloat(item.value.storage.token_pool) / tokenMultiplyer;\n            const price_yesterday = tez_pool / token_pool;\n            setTokenTezPriceYesterday(price_yesterday);\n          }\n        })\n    }\n  }, [tokenDetails, tezMultiplyer, tokenMultiplyer])\n\n  // set 24 hours change for token price\n  useEffect(() => {\n    if (tokenTezPriceYesterday) {\n      const tokenUsdNew = tokenUsd;\n      tokenUsdNew.usd_24h_change = (tokenUsdNew.usd / (tokenTezPriceYesterday * tezUsd.usd) - 1) * 100;\n      setTokenUsd(tokenUsdNew);\n      Publish.tokenPriceChange(tokenUsdNew.usd_24h_change);\n    }\n  }, [tokenUsd, tokenUsd.usd, tokenTezPriceYesterday, tezUsd.usd])\n  \n  // token price update\n  useEffect(() => {\n    if (tezPool && tokenPool) {\n      const tokenUsdNew = tokenUsd;\n      tokenUsdNew.usd = tezPool / tokenPool * tezUsd.usd;\n      setTokenUsd(tokenUsdNew);\n      Publish.pricePerTez(tezPool / tokenPool);\n      Publish.pricePerUsd(tokenUsdNew.usd);\n    }\n  }, [tezPool, tokenPool, tezUsd, tokenUsd])\n\n  // initial value\n  useEffect(() => {\n    if (tezPool && tokenPool) {\n      userChangeTez(1)\n    }\n    // eslint-disable-next-line\n  }, [tezPool, tokenPool])\n\n\n  // handle user changes\n  function round(value: number, amount: number) {\n    return Math.round(value * 10 ** amount) / 10 ** amount;\n  }\n  function setMaxTez() {\n    userChangeTez(userBalance);\n  }\n  function onChangeTez(event: any) { // ChangeEvent<HTMLInputElement>\n    userChangeTez(Math.abs(parseFloat(event.target.value)) || 0)\n  }\n  function userChangeTez(amount_tez: number) {\n    // b = 0.997 * a * y/(x + 0.997 * a)\n    const amount_token = round((1 - fee) * amount_tez * tokenPool / (tezPool + (1 - fee) * amount_tez), displayPositions);\n    \n    setAmountTez(amount_tez);\n    setAmountTezDollar(round(amount_tez * tezUsd.usd, displayPositions))\n    setAmountToken(amount_token);\n    setAmountTokenDollar(amount_token * tokenUsd.usd);\n  }\n  function onChangeTezDollar(event: any) {\n    userChangeTezDollar(Math.abs(parseFloat(event.target.value)) || 0)\n  }\n  function userChangeTezDollar(amount_tez_dollar: number) {\n    amount_tez_dollar = round(amount_tez_dollar, displayPositions);\n    const amount_tez = round(amount_tez_dollar / tezUsd.usd, displayPositions);\n\n    // b = 0.997 * a * y/(x + 0.997 * a)\n    const amount_token = round((1 - fee) * amount_tez * tokenPool / (tezPool + (1 - fee) * amount_tez), displayPositions);\n\n    setAmountTez(amount_tez);\n    setAmountTezDollar(amount_tez_dollar)\n    setAmountToken(amount_token);\n    setAmountTokenDollar(amount_token * tokenUsd.usd);\n  }\n  function onChangeToken(event: any) { // ChangeEvent<HTMLInputElement>\n    userChangeToken(Math.abs(parseFloat(event.target.value)) || 0)\n  }\n  function userChangeToken(amount_token: number) {\n    // b = 1.003 * a * y/(x - 1.003 * a)\n    let amount_tez = round((1 + fee) * amount_token * tezPool / (tokenPool - (1 + fee) * amount_token), displayPositions);\n    if (amount_tez < 0) {\n      amount_tez = 0;\n    }\n    setAmountTez(amount_tez);\n    setAmountTezDollar(amount_tez * tezUsd.usd)\n    setAmountToken(amount_token);\n    setAmountTokenDollar(amount_token * tokenUsd.usd);\n  }\n\n  // trigger buy\n  const buy = async (): Promise<void> => {\n    setLoadingBuy(true);\n    Tracker.trackEvent('swap_start', {\n      'XTZ': amountTez,\n      [tokenDetails.symbol]: amountToken,\n    });\n    try {\n      const minToken = Math.round(amountToken * tokenMultiplyer * (1 - maxSlippage));\n      const op = await contract.methods.tezToTokenPayment(minToken, userAddress).send({\n        storageLimit: 0,\n        amount: amountTez * tezMultiplyer,\n        mutez: true,\n      });\n      await op.confirmation();\n      const newStorage: any = await contract.storage();\n      if (newStorage) setStorage(newStorage);\n      updateUserBalance();\n      updateUserTokenBalance();\n      Tracker.trackEvent('swap_success', {\n        'XTZ': amountTez,\n        [tokenDetails.symbol]: minToken,\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoadingBuy(false);\n    }\n  };\n\n  function getSubmitButton() {\n    if (!userAddress) {\n      // connect first\n      return <></>;\n    }\n    if (loadingBuy) {\n      return <input type=\"submit\" value=\"Please confirm the transaction\" onClick={buy} id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" className=\"button long-submit-button bg-primary-4 w-button\" />;\n    }\n\n    if (!tezPool) {\n      return <button id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" className=\"button long-submit-button w-button\">Loading exchange rate</button>;\n    }\n\n    if (amountTez > userBalance) {\n      return <input type=\"submit\" value=\"Not enough funds\" id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" className=\"button long-submit-button bg-primary-4 w-button\" disabled style={{backgroundColor: '#ebebec'}} />;\n    }\n\n    if (!amountTez || !amountToken) {\n      return <input type=\"submit\" value={'Buy ' + tokenDetails?.symbol} id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" className=\"button long-submit-button bg-primary-4 w-button\" disabled style={{backgroundColor: '#ebebec'}} />;\n    }\n\n    return <input type=\"submit\" value={'Buy ' + tokenDetails?.symbol} onClick={buy} id=\"w-node-cac1c974-81c3-bb3d-28aa-2c88c2fd1725-856d06c6\" className=\"button long-submit-button bg-primary-4 w-button\" />;\n  }\n\n  return (\n        <>\n          <div id=\"form-input-1\" className=\"div-block-11 w-node-_15a9de31-66d8-0b4b-3b7b-19a314a9d93b-43c4b6f7\">\n          \n            {!useDollar &&\n              <>\n                <input\n                  type=\"number\"\n                  className=\"form-input form-input-large currency w-input\"\n                  name=\"Input-Currency\"\n                  data-name=\"Input Currency\"\n                  placeholder=\"0.00\"\n                  id=\"Input-Currency\"\n                  step=\"1\"\n                  style={{'paddingRight': 60}}\n                  value={amountTez || ''}\n                  onChange={(e) => onChangeTez(e)}\n                  required\n                />\n                <div\n                  className=\"text-currency\"\n                  style={{'overflow': 'hidden', 'textOverflow': 'ellipsis', 'width': 168}}\n                >\n                  ~${amountTezDollar.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                </div>\n              </>\n            }\n            {useDollar &&\n              <>\n                <span className=\"dollar-sign\" style={{position: 'absolute', left: 18, top: 10, color: '#141414'}}>$</span>\n                <input\n                  type=\"number\"\n                  className=\"form-input form-input-large currency w-input\"\n                  name=\"Input-Currency\"\n                  data-name=\"Input Currency\"\n                  placeholder=\"0.00\"\n                  id=\"Input-Currency\"\n                  step=\"1\"\n                  style={{paddingRight: 60, paddingLeft: 30}}\n                  value={amountTezDollar || ''}\n                  onChange={(e) => onChangeTezDollar(e)}\n                  required\n                />\n                <div\n                  className=\"text-currency\"\n                  style={{'overflow': 'hidden', 'textOverflow': 'ellipsis', 'width': 168}}\n                >\n                  ~{amountTez.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} ꜩ\n                </div>\n              </>\n            }\n\n            <button className=\"link-block\" style={{ backgroundColor: useDollar ? 'rgba(20,20,20,.5)' : '', color: useDollar ? 'white' : '', textAlign: 'center' }} onClick={() => setUseDollar(!useDollar)}>$</button>\n\n            <div className=\"div-block-12\">\n              <div className=\"image-8\">\n                <img loading=\"lazy\" alt=\"\" className=\"image-9\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6091079111aa5a643419586e_icon-arrow-down.svg\" />\n              </div>\n            </div>\n          </div>\n          <div id=\"form-price-1\" className=\"div-block-8 w-node-_15a9de31-66d8-0b4b-3b7b-19a314a9d940-43c4b6f7\">\n            <div className=\"div-block-9\">\n              <div className=\"div-block-10\">\n                <img loading=\"lazy\" alt=\"\" className=\"token-img\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/609bdfbc8ef4b38115354a8e_2011.png\" />\n              </div>\n              <div>\n                <div className=\"small-text exception-buying\">\n                  Tezos <span className=\"inline-badge-medium\">XTZ</span>\n                </div>\n                <div className=\"small-text crypto-price\">\n                  ~${tezUsd.usd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                  &nbsp;\n                  {tezUsd.usd_24h_change < 0 &&\n                    <span className=\"inline-badge-medium red\">↓ {tezUsd.usd_24h_change.toLocaleString(undefined, { maximumFractionDigits: 2 })}%</span>\n                  }\n                  {tezUsd.usd_24h_change > 0 &&\n                    <span className=\"inline-badge-medium green\">↑ {tezUsd.usd_24h_change.toLocaleString(undefined, { maximumFractionDigits: 2 })}%</span>\n                  }\n                </div>\n              </div>\n              { userBalance > 0 &&\n                <div onClick={() => setMaxTez()} style={{background: '#ebebec', color: 'rgba(20,20,20,.5)', borderRadius: 4, padding: '6px 6px 4px 6px', marginLeft: 'auto', fontSize: 10, lineHeight: 1, cursor: 'pointer'}}>MAX</div>\n              }\n            </div>\n          </div>\n          <div id=\"form-input-2\" className=\"div-block-11 w-node-dfb2f49c-1a5d-d200-b5d5-9b7a746613e7-43c4b6f7\">\n            <input\n              type=\"number\"\n              className=\"form-input form-input-large currency w-input\"\n              name=\"Output-Currency\"\n              data-name=\"Output Currency\"\n              placeholder=\"0.00\"\n              id=\"Output-Currency\"\n              step=\"10000\"\n              style={{paddingRight: 12}}\n              value={amountToken || ''}\n              onChange={(e) => onChangeToken(e)}\n              required\n            />\n            <div\n              className=\"text-currency\"\n              style={{'overflow': 'hidden', 'textOverflow': 'ellipsis', 'width': 216}}\n            >\n              ~${amountTokenDollar.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            </div>\n          </div>\n          <div id=\"form-price-2\" className=\"div-block-8 w-node-_15a9de31-66d8-0b4b-3b7b-19a314a9d949-43c4b6f7\">\n            <div className=\"div-block-9\">\n              <div className=\"div-block-10\">\n                <img loading=\"lazy\" alt=\"\" className=\"token-img\" src={tokenDetails?.thumbnailUri} />\n              </div>\n              <div>\n                <div className=\"small-text exception-buying\">\n                  {tokenDetails?.name} <span className=\"inline-badge-medium\">{tokenDetails?.symbol}</span>\n                </div>\n                <div className=\"small-text crypto-price\">\n                  ~${tokenUsd.usd.toLocaleString(undefined, { minimumFractionDigits: 2, minimumSignificantDigits: 1, maximumSignificantDigits: 3 })}\n                  { tezUsd.usd_24h_change !== 0 && (tokenUsd.usd_24h_change > 0 || tokenUsd.usd_24h_change > tezUsd.usd_24h_change) &&\n                    <>\n                    &nbsp;\n                    {tokenUsd.usd_24h_change < 0 &&\n                      <span className=\"inline-badge-medium red\">↓ {tokenUsd.usd_24h_change.toLocaleString(undefined, { maximumFractionDigits: 2 })}%</span>\n                    }\n                    {tokenUsd.usd_24h_change > 0 &&\n                      <span className=\"inline-badge-medium green\">↑ {tokenUsd.usd_24h_change.toLocaleString(undefined, { maximumFractionDigits: 2 })}%</span>\n                    }\n                    </>\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n\n          { /* Submit */}\n          { getSubmitButton() }\n        </>\n  )\n}\n\nexport default ExchangeForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst STROKE = 1;\ntype LineChartProps = {\n  data: Array<any>;\n  height: number;\n  width: number;\n  horizontalGuides: any;\n  verticalGuides: any;\n  precision: number;\n}\nconst LineChart = ({\n  data,\n  height,\n  width,\n  horizontalGuides: numberOfHorizontalGuides,\n  verticalGuides: numberOfVerticalGuides,\n  precision\n}: LineChartProps) => {\n  const FONT_SIZE = width / 50;\n  const maximumXFromData = Math.max(...data.map(e => e.x));\n  const maximumYFromData = Math.max(...data.map(e => e.y));\n\n  const digits =\n    parseFloat(maximumYFromData.toString()).toFixed(precision).length + 1;\n  const padding = (FONT_SIZE + (digits * 1.4) + 3) * 3;\n\n  const chartWidth = width - padding * 2;\n  const chartHeight = height - padding * 2;\n\n  const points = data\n    .map(element => {\n      const x = (element.x / maximumXFromData) * chartWidth + padding;\n      const y =\n        chartHeight - (element.y / maximumYFromData) * chartHeight + padding;\n      return `${x},${y}`;\n    })\n    .join(\" \");\n\n  const Axis = ({ points }: { points: string }) => (\n    <polyline fill=\"none\" stroke=\"#ccc\" strokeWidth=\".5\" points={points} />\n  );\n\n  const XAxis = () => (\n    <Axis\n      points={`${padding},${height - padding} ${width - padding},${height -\n        padding}`}\n    />\n  );\n\n  const YAxis = () => (\n    <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  );\n\n  const VerticalGuides = (): JSX.Element[] => {\n    const guideCount = numberOfVerticalGuides || data.length - 1;\n\n    const startY = padding;\n    const endY = height - padding;\n\n    return new Array(guideCount).fill(0).map((_, index) => {\n      const ratio = (index + 1) / guideCount;\n\n      const xCoordinate = padding + ratio * (width - padding * 2);\n\n      return (\n        <React.Fragment key={index}>\n          <polyline\n            fill=\"none\"\n            stroke=\"#ccc\"\n            strokeWidth=\".5\"\n            points={`${xCoordinate},${startY} ${xCoordinate},${endY}`}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const HorizontalGuides = () => {\n    const startX = padding;\n    const endX = width - padding;\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const ratio = (index + 1) / numberOfHorizontalGuides;\n\n      const yCoordinate = chartHeight - chartHeight * ratio + padding;\n\n      return (\n        <React.Fragment key={index}>\n          <polyline\n            fill=\"none\"\n            stroke={\"#ccc\"}\n            strokeWidth=\".5\"\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2;\n\n    return data.filter(data => data.label).map((element, index) => {\n      const x = (element.x / maximumXFromData) * chartWidth + padding - FONT_SIZE / 2;\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y}\n          style={{\n            fill: \"#808080\",\n            fontSize: FONT_SIZE,\n            fontFamily: \"Helvetica\"\n          }}\n        >\n          {element.label}\n        </text>\n      );\n    });\n  };\n\n  const LabelsYAxis = () => {\n    const PARTS = numberOfHorizontalGuides;\n    return new Array(PARTS + 1).fill(0).map((_, index) => {\n      const x = FONT_SIZE;\n      const ratio = index / numberOfHorizontalGuides;\n\n      const yCoordinate =\n        chartHeight - chartHeight * ratio + padding + FONT_SIZE / 2;\n      return (\n        <text\n          key={index}\n          x={x}\n          y={yCoordinate}\n          style={{\n            fill: \"#808080\",\n            fontSize: FONT_SIZE,\n            fontFamily: \"Helvetica\"\n          }}\n        >\n          {(maximumYFromData * (index / PARTS)).toFixed(precision)} ꜩ\n        </text>\n      );\n    });\n  };\n\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      height=\"100%\"\n      width=\"100%\"\n    >\n      <XAxis />\n      {LabelsXAxis()}\n      <YAxis />\n      {LabelsYAxis()}\n      {numberOfVerticalGuides && VerticalGuides()}\n      {HorizontalGuides()}\n\n      <polyline\n        fill=\"none\"\n        className=\"graphLine\"\n        stroke=\"#392396\"\n        strokeWidth={STROKE}\n        points={points}\n      />\n    </svg>\n  );\n};\n\nLineChart.defaultProps = {\n  height: 200,\n  width: 500,\n  horizontalGuides: 4,\n  verticalGuides: null,\n  precision: 2\n};\n\nLineChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number,\n      label: PropTypes.string\n    })\n  ).isRequired,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  horizontalGuides: PropTypes.number,\n  verticalGuides: PropTypes.number,\n  precision: PropTypes.number\n};\n\nexport default LineChart;","import React, { useEffect, useState } from \"react\";\nimport LineChart from \"./components/LineChart\";\n\nfunction process_pool_data(data: Array<any>, tokenDecimals: number) {\n  return data.map(item => {\n    const tez_pool = parseFloat(item.value.storage.tez_pool) / 10 ** 6;\n    const token_pool = parseFloat(item.value.storage.token_pool) / 10 ** tokenDecimals;\n    const rate = tez_pool / token_pool;\n    return {\n      tez_pool,\n      token_pool,\n      rate,\n      timestamp: item.timestamp\n    }\n  })\n}\n\ninterface PriceChartProps {\n  swapContract: string;\n  tokenDecimals?: number;\n}\n\nconst PriceChart = ({ swapContract, tokenDecimals = 8 }: PriceChartProps) => {\n  const [data, setData] = useState<Array<any>>([]);\n\n  useEffect(() => {\n    // load history\n    const limit = 700; // max: 1000\n    fetch(`https://api.tzkt.io/v1/contracts/${swapContract}/storage/history?limit=${limit}`)\n      .then(res => res.json())\n      .then(data => process_pool_data(data, tokenDecimals))\n      .then(data => data.reverse())\n      .then(data => data.map((item, index) => {\n        return {\n          label: index % 124 === 0 ? item.timestamp.substr(5, 5) : '', // only show a few labels\n          x: index,\n          y: item.rate,\n        }\n      }))\n      .then(data => setData(data))\n  }, [swapContract, tokenDecimals])\n\n  const precision = data.length ? (data[data.length-1].y).toLocaleString(undefined, { minimumFractionDigits: 2, minimumSignificantDigits: 1, maximumSignificantDigits: 2 }).length - 2 : 5\n\n  return (\n    <>\n      {data.length &&\n        <LineChart\n          width={600}\n          height={300}\n          data={data}\n          horizontalGuides={5}\n          precision={precision}\n          verticalGuides={1}\n        />\n      }\n    </>\n  )\n}\n\nexport default PriceChart;","import React, { useEffect, useCallback, useState } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n// import \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport ExchangeForm from './components/ExchangeForm';\nimport config from './config';\nimport Publish from './publish';\nimport PriceChart from './PriceChart';\nimport { bytes2Char } from '@taquito/utils';\n\ninterface AppProps {\n  swapContract: string\n}\n\nconst App = ({ swapContract }: AppProps) => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(config.rpcUrl)\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(-1);\n  const [userTokenBalance, setUserTokenBalance] = useState<number>(-1);\n  const [storage, setStorage] = useState<any>();\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [showTokenomics, setShowTokenomics] = useState<boolean>(false);\n  const [showDisclaimer, setShowDisclaimer] = useState<boolean>(false);\n  const [tokenDetails, setTokenDetails] = useState<any>();\n\n  // creates contract instance\n  useEffect(() => {\n    async function initContract() {\n      const newContract = await Tezos.wallet.at(swapContract);\n      const newStorage: any = await newContract.storage();\n      setContract(newContract);\n      setStorage(newStorage);\n      initTokenContract(newStorage.storage.token_address)\n    }\n\n    async function initTokenContract(coinContract: string) {\n      try {\n        const newContract = await Tezos.wallet.at(coinContract);\n        const newStorage: any = await newContract.storage();\n        const metdata: any = await newStorage.assets.token_metadata.get(0);\n        const tokenDetails = {\n          totalSupply: parseInt(newStorage.assets.total_supply),\n          name: bytes2Char(metdata['token_info'].get('name')),\n          symbol: bytes2Char(metdata['token_info'].get('symbol')),\n          description: bytes2Char(metdata['token_info'].get('description')),\n          thumbnailUri: bytes2Char(metdata['token_info'].get('thumbnailUri')),\n          decimals: parseInt(bytes2Char(metdata['token_info'].get('decimals'))),\n          shouldPreferSymbol: bytes2Char(metdata['token_info'].get('shouldPreferSymbol')) === 'true',\n          coinContractAddress: coinContract,\n          swapContract: swapContract,\n        }\n        setTokenDetails(tokenDetails)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    initContract()\n  }, [Tezos.wallet, swapContract])\n\n  // update balances\n  const updateTokenBalance = useCallback(() => {\n    if (userAddress && tokenDetails) {\n      const url = `https://api.better-call.dev/v1/account/${config.network}/${userAddress}/token_balances`\n      fetch(url)\n        .then(res => res.json())\n        .then(data => data.balances.find((coin: any) => coin.contract === tokenDetails.coinContractAddress))\n        .then(coin => {\n          if (coin) {\n            setUserTokenBalance(parseInt(coin.balance) / 10**coin.decimals);\n          } else {\n            setUserTokenBalance(0);\n          }\n        })\n    } else {\n      setUserTokenBalance(-1);\n    }\n  }, [setUserTokenBalance, userAddress, tokenDetails])\n  const updateBalance = useCallback(async () => {\n    if (userAddress) {\n      try {\n        const balance = await Tezos.tz.getBalance(userAddress);\n        setUserBalance(balance.toNumber() / 10**6);\n      } catch (e) {\n        console.warn(e)\n      }\n    } else {\n      setUserBalance(-1);\n    }\n  }, [setUserBalance, userAddress, Tezos.tz])\n  useEffect(() => {\n    updateBalance()\n    updateTokenBalance()\n  }, [userAddress, updateTokenBalance, updateBalance])\n  useEffect(() => {\n    if (userTokenBalance !== -1) {\n      Publish.userTokenBalance(userTokenBalance, tokenDetails?.symbol);\n    }\n  }, [userTokenBalance, tokenDetails])\n  useEffect(() => {\n    if (userBalance !== -1) {\n      Publish.userBalance(userBalance);\n    }\n  }, [userBalance])\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateBalance()\n      updateTokenBalance()\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [updateBalance, updateTokenBalance]);\n\n  const generateQrCode = (): { __html: string } => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n\n    return { __html: qr.createImgTag(4) };\n  };\n\n  return (\n    <div className=\"card bg-primary-1\">\n      <div className=\"card-body\">\n        <div className=\"form-block content-width-large align-center w-form\">\n          <div className=\"space-bottom\">\n            <h3 className=\"heading no-space-bottom\">Buy ${tokenDetails?.symbol}</h3>\n            { userTokenBalance === -1 &&\n              <div id=\"current-token\" className=\"large-text\">\n                Connect your wallet to see your balance and trade\n              </div>\n            }\n            { userTokenBalance !== -1 &&\n              <div id=\"current-token\" className=\"large-text\">\n                Your are currently holding <span className=\"inline-badge\">{userTokenBalance.toLocaleString(undefined, { maximumFractionDigits: 0 })}</span> ${tokenDetails?.symbol}\n              </div>\n            }\n          </div>\n          <div className=\"form-grid-vertical\">\n            <div className=\"form-row form-row-last\">\n              <div className=\"w-layout-grid grid-4\">\n                <ExchangeForm\n                  contract={contract}\n                  tokenDetails={tokenDetails}\n                  updateUserBalance={updateBalance}\n                  updateUserTokenBalance={updateTokenBalance}\n                  Tezos={Tezos}\n                  userAddress={userAddress}\n                  userBalance={userBalance}\n                  setStorage={setStorage}\n                  storage={storage}\n                />\n\n                {!userAddress &&\n                  <ConnectButton\n                    Tezos={Tezos}\n                    setPublicToken={setPublicToken}\n                    setWallet={setWallet}\n                    setUserAddress={setUserAddress}\n                    setBeaconConnection={setBeaconConnection}\n                    wallet={wallet}\n                  />\n                }\n\n                { /* Disconnect */}\n                {userAddress &&\n                  <DisconnectButton\n                    wallet={wallet}\n                    setPublicToken={setPublicToken}\n                    setUserAddress={setUserAddress}\n                    setWallet={setWallet}\n                    setTezos={setTezos}\n                    setBeaconConnection={setBeaconConnection}\n                  />\n                }\n                </div>\n\n                <div>\n                  <div className=\"accordion-group exception-buycvza\">\n                    <div className=\"accordion-title-panel exception-buycerveza\" onClick={() => setShowTokenomics(!showTokenomics)}>\n                      <h5 className=\"small-text\">Tokenomics</h5>\n                      <img \n                        alt=\"\"\n                        className=\"accordion-arrow\"\n                        src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6091079111aa5ad8b31958a5_icon-chevron-right.svg\"\n                        style={{transform: showTokenomics ? 'rotateZ(90deg)' : 'rotateZ(0deg)', transformStyle: 'preserve-3d', transition: 'transform 200ms'}}\n                      />\n                    </div>\n                    <div className=\"accordion-content\" style={{display: showTokenomics ? 'block' : 'none', opacity: 1}}>\n                      <div>\n                        <div>\n                          <div className=\"grid-halves full-width\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51bfc-856d06c6\">Contract</div>\n                            <div className=\"tiny-text\">{tokenDetails?.coinContractAddress}</div>\n                          </div>\n                          <div className=\"grid-halves full-width\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51c01-856d06c6\">DEX LP Contract</div>\n                            <div className=\"tiny-text\">{tokenDetails?.swapContract}</div>\n                          </div>\n                          <div className=\"grid-halves full-width\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51c06-856d06c6\">Total Supply</div>\n                            <div className=\"small-text\">{(tokenDetails?.totalSupply / (10**tokenDetails?.decimals)).toLocaleString()}</div>\n                          </div>\n                          <div className=\"grid-halves full-width\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51c0b-856d06c6\">Price per USD</div>\n                            <div className=\"price-per-usd\">N/A</div>\n                          </div>\n                          <div className=\"grid-halves full-width\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51c10-856d06c6\">Price per Tezos</div>\n                            <div className=\"price-per-tez\">N/A</div>\n                          </div>\n                          <div className=\"grid-halves full-width space-bottom\">\n                            <div id=\"w-node-_2bc1ab25-9a15-d706-5153-310495f51c15-856d06c6\">Price Change 24h</div>\n                            <div className=\"price-change-24h\">N/A</div>\n                          </div>\n                        </div>\n                        <div className=\"graph-wrapper\">\n                          <div className=\"graph-svg\">\n                            { tokenDetails &&\n                              <PriceChart\n                                swapContract={tokenDetails.swapContract}\n                                tokenDecimals={tokenDetails.decimals}\n                              />\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"accordion-group exception-buycvza\">\n                    <div className=\"accordion-title-panel exception-buycerveza\" onClick={() => setShowDisclaimer(!showDisclaimer)}>\n                      <h5 className=\"small-text\">Disclaimer</h5>\n                      <img\n                        alt=\"\"\n                        className=\"accordion-arrow\"\n                        src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6091079111aa5ad8b31958a5_icon-chevron-right.svg\"  \n                        style={{transform: showDisclaimer ? 'rotateZ(90deg)' : 'rotateZ(0deg)', transformStyle: 'preserve-3d', transition: 'transform 200ms'}}\n                      />\n                    </div>\n                    <div className=\"accordion-content\" style={{display: showDisclaimer ? 'block' : 'none', opacity: 1}}>\n                      <div><p>\n                        The rates displayed by the calculator represent market exchange rates, and are provided for informational and estimation purposes only. They do not include any conversion fees or other charges applicable to a conversion or other transaction. The calculator is based on a third party service, the Company and its affiliates accept no responsibility for the contents or results of any calculations made using the calculator.\n                        <br />\n                      </p></div>\n                    </div>\n                  </div>\n                </div>\n              \n            </div>\n          </div>\n\n          { /* Connecting */}\n          {false && publicToken && (!userAddress || isNaN(userBalance)) &&\n            <div id=\"content\">\n              <p className=\"text-align-center\">\n                <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to your wallet\n                </p>\n              <div\n                dangerouslySetInnerHTML={generateQrCode()}\n                className=\"text-align-center\"\n              ></div>\n              <p id=\"public-token\">\n                {copiedPublicToken ? (\n                  <span id=\"public-token-copy__copied\">\n                    <i className=\"far fa-thumbs-up\"></i>\n                  </span>\n                ) : (\n                  <span\n                    id=\"public-token-copy\"\n                    onClick={() => {\n                      if (publicToken) {\n                        navigator.clipboard.writeText(publicToken);\n                        setCopiedPublicToken(true);\n                        setTimeout(() => setCopiedPublicToken(false), 2000);\n                      }\n                    }}\n                  >\n                    <i className=\"far fa-copy\"></i>\n                  </span>\n                )}\n\n                <span>\n                  Public token: <span>{publicToken}</span>\n                </span>\n              </p>\n              <p className=\"text-align-center\">\n                Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\n              </p>\n            </div>\n          }\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useEffect, useState, useRef } from 'react';\n\ninterface ClockProps {\n  since: Date,\n  durationInSeconds: number\n}\n\nconst Clock = ({ since, durationInSeconds }: ClockProps) => {\n  // eslint-disable-next-line\n  const [count, setCount] = useState<number>(0)\n  const intervalRef = useRef<NodeJS.Timeout>()\n\n  const getCount = () => {\n    const noPenaltyAt = Math.floor(since.getTime() / 1000) + durationInSeconds\n    const remaining = noPenaltyAt - Math.floor(Date.now() / 1000)\n    if (remaining > 0) {\n      return remaining\n    } else {\n      return 0\n    }\n  }\n\n  const renderTime = () => {\n    const total = getCount()\n    const hours = Math.floor(total / 60 / 60)\n    const minutes = Math.floor(total / 60) % 60\n    const prefixMinutes = minutes < 10 ? '0' : ''\n    const seconds = total % 60\n    const prefixSeconds = seconds < 10 ? '0' : ''\n\n    return `${hours}:${prefixMinutes}${minutes}:${prefixSeconds}${seconds}`\n  }\n\n  // rerender every second\n  useEffect(() => {\n    intervalRef.current = setInterval(() => setCount(count => count + 1), 1000)\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current)\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      {renderTime()}\n    </>\n  )\n}\n\nexport default Clock\n","\nimport BigNumber from \"bignumber.js\";\nimport React from \"react\";\nimport Clock from './Clock';\n\ninterface PenaltyInfoProps {\n  penalty: {\n    feePercentage: BigNumber\n    periodSeconds: BigNumber\n  }\n  personalLastUpdate?: Date\n}\n\nconst PenaltyInfo = ({ penalty, personalLastUpdate }: PenaltyInfoProps) => {\n\n  let penaltyTimeString = ''\n  const penaltyHours = penalty.periodSeconds.dividedBy(60 * 60)\n  const penaltyDays = penaltyHours.dividedBy(24)\n  if (penaltyHours.mod(24).isZero()) {\n    if (penaltyDays.gt(1)) {\n      penaltyTimeString = penaltyDays.toFixed() + ' days'\n    } else {\n      penaltyTimeString = penaltyDays.toFixed() + ' day'\n    }\n  } else {\n    penaltyTimeString = penaltyHours.toFixed() + ' hours'\n  }\n\n  if (penalty.feePercentage.gt(0)) {\n    return <>\n      <div className=\"label\">\n        {penalty?.feePercentage.toNumber()}% fee for withdrawals within {penaltyTimeString}.\n      </div>\n      {personalLastUpdate &&\n        <div className=\"small-text align-right\">\n          <Clock since={personalLastUpdate} durationInSeconds={penalty.periodSeconds.toNumber()}></Clock> left\n        </div>\n      }\n    </>\n  } else {\n    return <></>\n  }\n}\n\nexport default PenaltyInfo","\nimport BigNumber from \"bignumber.js\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport PenaltyInfo from './PenaltyInfo';\n\ninterface DepositModalProps {\n  hideDepositModal: Function\n  depositValue: string\n  setDepositValue: Dispatch<SetStateAction<string>>\n  personalMaxDeposit: BigNumber\n  personalStake: BigNumber\n  deposit: Function\n  depositing: boolean\n  symbol: string\n  penalty?: {\n    feePercentage: BigNumber\n    periodSeconds: BigNumber\n  }\n  personalLastUpdate?: Date\n}\n\nconst DepositModal = ({ hideDepositModal, depositValue, setDepositValue, personalMaxDeposit, personalStake, deposit, depositing, symbol, penalty, personalLastUpdate }: DepositModalProps) => {\n\n  const value = new BigNumber(depositValue)\n  const disabled = value.isZero() || value > personalMaxDeposit || depositing\n\n  const parseDepositValue = (value: string) => {\n    const parsed = value.replaceAll(',', '.')\n    setDepositValue(parsed)\n  }\n\n  return (\n    <div id=\"modalWrapper\" className=\"modal-wrapper\" style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, background: 'rgba(0,0,0,0.8)', zIndex: 10 }} onClick={() => hideDepositModal()}>\n\n      <div className=\"modal\" onClick={(event) => event.stopPropagation()}>\n        <h3>Deposit</h3>\n        <span id=\"killModal\" className=\"link-block-2 w-inline-block\" style={{cursor: 'pointer'}} onClick={() => hideDepositModal()}>\n          <img loading=\"lazy\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/60a2b8ec3e22ca447f4b6063_nav-close-icon.svg\" />\n        </span>\n        <div className=\"form-block-2 w-form\">\n          <form onSubmit={(event) => {deposit(); event.preventDefault();}}>\n\n            <div className=\"div-block-11\">\n              <input\n                type=\"text\"\n                inputMode=\"numeric\"\n                pattern=\"[0-9,.]*\"\n                className=\"form-farm w-input\"\n                name=\"depositAmount\"\n                data-name=\"depositAmount\"\n                placeholder=\"0.00\"\n                id=\"depositAmount-2\"\n                value={depositValue}\n                disabled={depositing}\n                onChange={(e) => parseDepositValue(e.target.value)}\n                style={{paddingRight: 16}}\n              />\n              <div className=\"div-block-18\">\n                <div>Pool Token</div>\n                <div id=\"depositEstimateUsd\" className=\"small-text align-right\">\n                  <span onClick={() => setDepositValue(personalMaxDeposit.toString())} style={{ cursor: 'pointer' }}>MAX ({personalMaxDeposit.toString()})</span>\n                </div>\n              </div>\n              <div className=\"div-block-17\">\n                <div className=\"div-block-19\">\n                  <div className=\"farm-coin small coin-left\">\n                    <img loading=\"lazy\" id=\"tokenImageInput\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/60911d04b9836a75b1dfa271_CVCA-COIN-ico-256.png\" />\n                  </div>\n                  <div className=\"farm-coin small coin-right\">\n                    <img loading=\"lazy\" id=\"tokenImageOutput\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6092c5a84ac959603b28b19c_1_ZdaWerzN9F7oIyhZEwcRqQ%20(1).jpeg\" />\n                    <div className=\"label\">Pool Token</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-layout-grid farm-grid\">\n              <div id=\"w-node-_711fc696-7ac7-e6c8-120c-6f532e8df7bf-8f74eee8\" className=\"label big\">\n                You Staked\n              </div>\n              <div id=\"TotalStaked\" className=\"small-text align-right big w-node-_26bb2413-c0d4-5c9f-4953-309a53061659-8f74eee8\">\n                {personalStake.toNumber().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 6})} <span>${symbol}</span>\n              </div>\n              {/* <div id=\"w-node-_3af69200-78c6-57b8-686c-10b9cbf7815d-8f74eee8\" className=\"label\">\n                    Daily Earnings\n                  </div>\n                  <div id=\"dailyEarningsCvza\" className=\"small-text align-right w-node-_3af69200-78c6-57b8-686c-10b9cbf7815f-8f74eee8\">\n                    0 $CVZA\n                  </div>\n                  <div id=\"dailyEarningsUsd\" className=\"small-text align-right w-node-c0464df1-43ea-5fc9-f349-4f15ca11b4fc-8f74eee8\">\n                    $0.00\n                  </div>\n                  <div id=\"w-node-_3af69200-78c6-57b8-686c-10b9cbf78161-8f74eee8\" className=\"label\">\n                    Monthly Earnings\n                  </div>\n                  <div id=\"monthlyEarningsCvza\" className=\"small-text align-right w-node-_3af69200-78c6-57b8-686c-10b9cbf78163-8f74eee8\">\n                    0 $CVZA\n                  </div>\n                  <div id=\"monthlyEarningsUsd\" className=\"small-text align-right w-node-_14ab1d8b-5dd7-c224-e270-848bdeef0918-8f74eee8\">\n                    $0.00\n                  </div>\n                  <div id=\"w-node-_3af69200-78c6-57b8-686c-10b9cbf78165-8f74eee8\" className=\"label\">\n                    Yearly Earnings\n                  </div>\n                  <div id=\"yearlyEarningsCvza\" className=\"small-text align-right w-node-_3af69200-78c6-57b8-686c-10b9cbf78167-8f74eee8\">\n                    0 $CVZA\n                  </div>\n                  <div id=\"yearlyEarningsUsd\" className=\"small-text align-right w-node-_1dde12e2-aefb-d3dc-3339-5f7f3e97821c-8f74eee8\">\n                    $0.00\n                  </div> */}\n              \n              { penalty && <PenaltyInfo penalty={penalty} personalLastUpdate={personalLastUpdate}></PenaltyInfo>}\n            </div>\n\n            <input\n              type=\"submit\"\n              value={depositing ? 'Depositing...' : 'Deposit'}\n              data-wait=\"Please wait...\"\n              id=\"depositConfirm\"\n              disabled={disabled}\n              className={'button bg-primary-4 full-width w-button' + (disabled ? ' disabled' : '')}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DepositModal","\nimport BigNumber from \"bignumber.js\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport PenaltyInfo from './PenaltyInfo';\n\ninterface WithdrawModalProps {\n  hideWithdrawModal: Function\n  withdrawValue: string\n  setWithdrawValue: Dispatch<SetStateAction<string>>\n  personalStake: BigNumber\n  withdraw: Function\n  withdrawing: boolean\n  symbol: string\n  penalty?: {\n    feePercentage: BigNumber\n    periodSeconds: BigNumber\n  }\n  personalLastUpdate?: Date\n}\n\nconst WithdrawModal = ({ hideWithdrawModal, withdrawValue, setWithdrawValue, personalStake, withdraw, withdrawing, symbol, penalty, personalLastUpdate }: WithdrawModalProps) => {\n\n  const value = new BigNumber(withdrawValue)\n  const disabled = value.isZero() || value.gt(personalStake) || withdrawing\n\n  const parseWithdrawValue = (value: string) => {\n    const parsed = value.replaceAll(',', '.')\n    setWithdrawValue(parsed)\n  }\n\n  return (\n    <div id=\"modalWrapper\" className=\"modal-wrapper\" style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, background: 'rgba(0,0,0,0.8)', zIndex: 10 }} onClick={() => hideWithdrawModal()}>\n\n      <div className=\"modal\" onClick={(event) => event.stopPropagation()}>\n        <h3>Withdraw</h3>\n        <span id=\"killModal\" className=\"link-block-2 w-inline-block\" style={{cursor: 'pointer'}} onClick={() => hideWithdrawModal()}>\n          <img loading=\"lazy\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/60a2b8ec3e22ca447f4b6063_nav-close-icon.svg\" />\n        </span>\n        <div className=\"form-block-2 w-form\">\n          <form onSubmit={(event) => {withdraw(); event.preventDefault();}}>\n\n            <div className=\"div-block-11\">\n              <input\n                type=\"text\"\n                inputMode=\"numeric\"\n                pattern=\"[0-9,.]*\"\n                className=\"form-farm w-input\"\n                name=\"depositAmount\"\n                data-name=\"depositAmount\"\n                placeholder=\"0.00\"\n                id=\"depositAmount-2\"\n                value={withdrawValue}\n                disabled={withdrawing}\n                onChange={(e) => parseWithdrawValue(e.target.value)}\n                style={{paddingRight: 16}}\n              />\n              <div className=\"div-block-18\">\n                <div>Pool Token</div>\n                <div id=\"depositEstimateUsd\" className=\"small-text align-right\">\n                  <span onClick={() => setWithdrawValue(personalStake.toString())} style={{ cursor: 'pointer' }}>MAX ({personalStake.toString()})</span>\n                </div>\n              </div>\n              <div className=\"div-block-17\">\n                <div className=\"div-block-19\">\n                  <div className=\"farm-coin small coin-left\">\n                    <img loading=\"lazy\" id=\"tokenImageInput\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/60911d04b9836a75b1dfa271_CVCA-COIN-ico-256.png\" />\n                  </div>\n                  <div className=\"farm-coin small coin-right\">\n                    <img loading=\"lazy\" id=\"tokenImageOutput\" alt=\"\" src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6092c5a84ac959603b28b19c_1_ZdaWerzN9F7oIyhZEwcRqQ%20(1).jpeg\" />\n                    <div className=\"label\">Pool Token</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-layout-grid farm-grid\">\n              <div id=\"w-node-_711fc696-7ac7-e6c8-120c-6f532e8df7bf-8f74eee8\" className=\"label big\">\n                You Staked\n              </div>\n              <div id=\"TotalStaked\" className=\"small-text align-right big w-node-_26bb2413-c0d4-5c9f-4953-309a53061659-8f74eee8\">\n                {personalStake.toNumber().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 6 })} <span>${symbol}</span>\n              </div>\n\n              { penalty && <PenaltyInfo penalty={penalty} personalLastUpdate={personalLastUpdate}></PenaltyInfo>}\n            </div>\n\n            <input\n              type=\"submit\"\n              value={withdrawing ? 'Withdrawing...' : 'Withdraw'}\n              data-wait=\"Please wait...\"\n              id=\"depositConfirm\"\n              disabled={disabled}\n              className={'button bg-primary-4 full-width w-button' + (disabled ? ' disabled' : '')}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default WithdrawModal","import { ContractAbstraction, MichelsonMap, TezosToolkit, UnitValue, Wallet } from '@taquito/taquito';\nimport BigNumber from \"bignumber.js\";\n\ntype DelegatorRecord = {\n  lpTokenBalance: BigNumber;\n  accumulatedRewardPerShareStart: BigNumber;\n  lastUpdate: Date;\n};\n\ntype Address = string;\nexport interface FarmStorageInterface {\n  farm: {\n    lastBlockUpdate: BigNumber;\n    accumulatedRewardPerShare: BigNumber;\n    plannedRewards: {\n      rewardPerBlock: BigNumber;\n      totalBlocks: BigNumber;\n    };\n    claimedRewards: {\n      unpaid: BigNumber;\n      paid: BigNumber;\n    };\n    penalty: {\n      feePercentage: BigNumber;\n      periodSeconds: BigNumber;\n    };\n  };\n  farmLpTokenBalance: BigNumber;\n  delegators: MichelsonMap<Address, DelegatorRecord>;\n  addresses: {\n    admin: Address;\n    lpTokenContract: Address;\n    rewardTokenContract: Address;\n    penaltyPayoutAddress: Address;\n    rewardReserve: Address;\n  };\n}\n\n/**\n * APR\n *  =        CVZA yearly reward         /                 CVZA staked\n *  = (block reward * blocks in 1 year) / (total CVZA-QP staked *      CVZA value of CVZA-QP         )\n *  = (block reward * blocks in 1 year) / (totalStaked          * swap.token_pool / swap.total_supply)\n */\nexport async function estimateAPR(\n  farmStorage: FarmStorageInterface,\n  swapStorage: any,\n) {\n  const blockReward = farmStorage.farm.plannedRewards.rewardPerBlock\n  const blockTimeSeconds = 30\n  const blocksPerYear = new BigNumber(365 * 24 * 60 * 60 / blockTimeSeconds)\n\n  const totalStaked = await getTotalStaked(farmStorage)\n  const swapTokenPool = swapStorage.storage.token_pool as BigNumber\n  const swapTotalSupply = swapStorage.storage.total_supply as BigNumber\n\n  const cvzaYearlyReward = blockReward.multipliedBy(blocksPerYear)\n  const cvzaStaked = totalStaked.multipliedBy(swapTokenPool).dividedBy(swapTotalSupply)\n\n  const APR = cvzaYearlyReward.dividedBy(cvzaStaked).multipliedBy(100) // to get percentage\n\n  console.debug({\n    blockReward: blockReward.toNumber(),\n    blocksPerYear: blocksPerYear.toNumber(),\n    totalStaked: totalStaked.toNumber(),\n    swapTokenPool: swapTokenPool.toNumber(),\n    swapTotalSupply: swapTotalSupply.toNumber(),\n    cvzaYearlyReward: cvzaYearlyReward.toNumber(),\n    cvzaStaked: cvzaStaked.toNumber(),\n    APR: APR.toNumber(),\n  })\n\n  return APR\n}\n\nasync function updateAccumulatedRewardPerShare(\n  Tezos: TezosToolkit,\n  farmStorage: FarmStorageInterface\n) {\n  const lastBlockUpdate = farmStorage.farm.lastBlockUpdate;\n  const { level: currentLevel } = await Tezos.rpc.getBlockHeader();\n  const multiplier = new BigNumber(currentLevel).minus(lastBlockUpdate);\n\n  const outstandingReward = multiplier.multipliedBy(\n    farmStorage.farm.plannedRewards.rewardPerBlock\n  );\n\n  const claimedRewards = farmStorage.farm.claimedRewards.paid.plus(\n    farmStorage.farm.claimedRewards.unpaid\n  );\n  const totalRewards = outstandingReward.plus(claimedRewards);\n  const plannedRewards =\n    farmStorage.farm.plannedRewards.rewardPerBlock.multipliedBy(\n      farmStorage.farm.plannedRewards.totalBlocks\n    );\n  const totalRewardsExhausted = totalRewards.isGreaterThan(plannedRewards);\n\n  const reward = totalRewardsExhausted\n    ? plannedRewards.minus(claimedRewards)\n    : outstandingReward;\n\n  return farmStorage.farm.accumulatedRewardPerShare.plus(\n    reward.multipliedBy(1000000).div(farmStorage.farmLpTokenBalance)\n  );\n}\n\nexport async function delegatorRecord(\n  Tezos: TezosToolkit,\n  farmStorage: FarmStorageInterface\n) {\n  const delegatorAddress = await Tezos.wallet.pkh();\n  const delegatorRecord = await farmStorage.delegators.get(delegatorAddress);\n  if (delegatorRecord) {\n    delegatorRecord.lastUpdate = new Date(delegatorRecord.lastUpdate)\n  }\n  return delegatorRecord\n}\n\nexport async function delegatorReward(\n  Tezos: TezosToolkit,\n  farmStorage: FarmStorageInterface,\n  delegatorRecord: DelegatorRecord,\n) {\n  const accRewardPerShareStart = delegatorRecord.accumulatedRewardPerShareStart;\n  const accRewardPerShareEnd = await updateAccumulatedRewardPerShare(Tezos, farmStorage);\n  const accRewardPerShare = accRewardPerShareEnd.minus(\n    accRewardPerShareStart\n  );\n  const delegatorReward = accRewardPerShare.multipliedBy(\n    delegatorRecord.lpTokenBalance.shiftedBy(-6)\n  );\n\n  console.debug({\n    accRewardPerShareStart: accRewardPerShareStart.toString(),\n    accRewardPerShareEnd: accRewardPerShareEnd.toString(),\n    accRewardPerShare: accRewardPerShare.toString(),\n    delegatorReward: delegatorReward.toString(),\n    lpTokenBalance: delegatorRecord.lpTokenBalance.toString(),\n  })\n  return delegatorReward.isNaN() ? new BigNumber(0) : delegatorReward\n}\n\nexport async function getTotalStaked(\n  farmStorage: FarmStorageInterface\n) {\n  return farmStorage.farmLpTokenBalance;\n}\n\nexport async function getPersonalStake(\n  delegatorRecord: DelegatorRecord,\n): Promise<BigNumber> {\n  return delegatorRecord.lpTokenBalance\n}\n\nexport async function getPersonalMaxDeposit(swapStorage: any, userAddress: string) {\n  const user = await swapStorage.storage.ledger.get(userAddress)\n  if (user) {\n    return user.balance as BigNumber\n  } else {\n    return new BigNumber(0)\n  }\n}\n\n/**\n  * This function checks whether the user has already given an allowance to the farm.\n  *\n  * Token holders can give other addresses (and therefore smart contacts)\n  * an \"allowance\" to spend tokens on their behalf.\n  * For FA1.2 the entrypoint is called %approve or %approveCAS,\n  * in FA2 it is %update_operators.\n  */\nasync function hasOperator(\n  Tezos: TezosToolkit,\n  farmContractInstance: ContractAbstraction<Wallet>,\n  swapStorage: any,\n) {\n  /**\n   * this line needs to be changed depending on the storage structure of the contract\n   * Quipuswap will have a different FA2 storage implementation\n   */\n  const userAddress = await Tezos.wallet.pkh();\n\n  // Quipuswap\n  const allowances = await swapStorage.storage.ledger.get(userAddress).allowances\n\n  // Testnet\n  //const allowances = await swapStorage.tzip12.tokenOperators.get(userAddress);\n\n  if (!allowances) {\n    return false;\n  }\n\n  return farmContactIsOperator(farmContractInstance, allowances);\n}\n\nfunction farmContactIsOperator(\n  farmContractInstance: ContractAbstraction<Wallet>,\n  allowances: [string],\n) {\n  return allowances.includes(farmContractInstance!.address);\n}\n\nasync function tokenFA2AddOperator(\n  Tezos: TezosToolkit,\n  swapContractInstance: ContractAbstraction<Wallet>,\n  farmContractInstance: ContractAbstraction<Wallet>,\n) {\n  const userAddress = await Tezos.wallet.pkh();\n  return swapContractInstance!.methods.update_operators([\n    {\n      add_operator: {\n        owner: userAddress,\n        operator: farmContractInstance!.address,\n        token_id: 0,\n      },\n    },\n  ]);\n}\n\nexport async function performDeposit(\n  Tezos: TezosToolkit,\n  swapContractInstance: ContractAbstraction<Wallet>,\n  farmContractInstance: ContractAbstraction<Wallet>,\n  swapStorage: any,\n  amount: BigNumber) {\n  // check whether there is already an allowance\n  const contractIsOperator = await hasOperator(Tezos, farmContractInstance, swapStorage);\n  const depositOperation = farmContractInstance!.methods.deposit(amount);\n\n  if (!contractIsOperator) {\n    // Approve and then deposit\n    const addOperatorTransactionPromise = tokenFA2AddOperator(Tezos, swapContractInstance, farmContractInstance);\n    const tx = await Tezos.wallet\n      .batch()\n      .withContractCall(await addOperatorTransactionPromise)\n      .withContractCall(depositOperation)\n      .send();\n    await tx.confirmation(1)\n    return tx\n  } else {\n    // Only deposit\n\n    // TODO: ???\n    //   const depositStorageLimit = await estimateDepositStorageLimit(1)\n    //   const storageLimit = depositStorageLimit * storageLimitSurcharge;\n    //   const sendParameters = {\n    //     amount: 0,\n    //     storageLimit: storageLimit\n    //   };\n\n    const tx = await depositOperation.send();\n    await tx.confirmation(1)\n    return tx\n  }\n}\n\nexport async function performWithdraw(farmContractInstance: ContractAbstraction<Wallet>, amount: BigNumber) {\n  const tx = await farmContractInstance!.methods.withdraw(amount).send();\n  await tx.confirmation(1)\n  return tx\n}\n\nexport async function performClaim(farmContractInstance: ContractAbstraction<Wallet>) {\n  const tx = await farmContractInstance!.methods.claim(UnitValue).send();\n  await tx.confirmation(1)\n  return tx\n}\n","import { ContractAbstraction, TezosToolkit, Wallet } from \"@taquito/taquito\";\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DepositModal from './components/DepositModal';\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport WithdrawModal from './components/WithdrawModal';\nimport config from \"./config\";\nimport { delegatorRecord, delegatorReward, estimateAPR, FarmStorageInterface, getPersonalMaxDeposit, getPersonalStake, getTotalStaked, performClaim, performDeposit, performWithdraw } from './services/farmContract';\n\ninterface FarmProps {\n  farmContractAddress: string;\n  swapContractAddress: string;\n  startDate: string;\n  endDate: string;\n}\n\ninterface FarmType {\n  startDate: Date,\n  endDate: Date,\n  totalStaked?: BigNumber,\n  APR?: BigNumber,\n  personalMaxDeposit?: BigNumber,\n  personalStake?: BigNumber,\n  personalUnclaimedReward?: BigNumber,\n  personalLastUpdate?: Date,\n  fromSymbol: string,\n  fromDecimals: number,\n  toSymbol: string,\n  toDecimals: number,\n}\n\nlet initialFarm: FarmType = {\n  startDate: new Date('01 Jul 2021 20:00:00 UTC'),\n  endDate: new Date('01 Sep 2021 20:00:00 UTC'),\n  totalStaked: undefined,\n  APR: undefined,\n  personalMaxDeposit: undefined,\n  personalStake: undefined,\n  personalUnclaimedReward: undefined,\n  personalLastUpdate: undefined,\n  fromSymbol: \"CVZA-QP\",\n  fromDecimals: 6,\n  toSymbol: \"CVZA\",\n  toDecimals: 8,\n};\n\nconst REFRESH_INTERVAL = 30000\n\n\nconst Farm = ({ farmContractAddress, swapContractAddress, startDate, endDate }: FarmProps) => {\n  // Wallet\n  const [Tezos, setTezos] = useState<TezosToolkit>(new TezosToolkit(config.rpcUrl));\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  // const [userTokenBalances, setUserTokenBalances] = useState<Array<any>>([]);\n\n  // Contracts\n  const [swapContractInstance, setSwapContractInstance] = useState<ContractAbstraction<Wallet>>();\n  const [farmContractInstance, setFarmContractInstance] = useState<ContractAbstraction<Wallet>>();\n  const [swapStorage, setSwapStorage] = useState<any>();\n  const [farmStorage, setFarmStorage] = useState<FarmStorageInterface>();\n  const [farm, setFarm] = useState<FarmType>(initialFarm);\n\n  // UI Interactions\n  const [depositValue, setDepositValue] = useState<string>(\"0.00\");\n  const [unstakeValue, setUnstakeValue] = useState<string>(\"0.00\");\n  const [depoiting, setDepoiting] = useState<boolean>(false);\n  const [claiming, setClaiming] = useState<boolean>(false);\n  const [withdrawing, setWithdrawing] = useState<boolean>(false);\n  const [exiting, setExiting] = useState<boolean>(false);\n  const [showDepositModal, setShowDepositModal] = useState<boolean>(false);\n  const [showWithdrawModal, setShowWithdrawModal] = useState<boolean>(false);\n\n  /////////\n  /// Wallet Balances\n  ///////// \n\n  // update token balances\n  // const updateTokenBalance = useCallback(() => {\n  //   if (userAddress) {\n  //     const url = `https://api.better-call.dev/v1/account/${config.network}/${userAddress}/token_balances`;\n  //     fetch(url)\n  //       .then((res) => res.json())\n  //       .then((res) => {\n  //         if (res && res.balances) {\n  //           setUserTokenBalances(res.balances);\n  //         }\n  //       })\n  //       .catch(console.error)\n  //   } else {\n  //     setUserTokenBalances([]);\n  //   }\n  // }, [setUserTokenBalances, userAddress]);\n\n  // trigger update when user changes\n  // useEffect(() => {\n  //   updateTokenBalance();\n  // }, [userAddress, updateTokenBalance]);\n\n  // periodically update balances\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     updateTokenBalance();\n  //   }, REFRESH_INTERVAL);\n  //   return () => clearInterval(interval);\n  // }, [updateTokenBalance]);\n\n  /////////\n  /// Contracts\n  ///////// \n\n  const initSwapContract = async (tezos: TezosToolkit, address: string) => {\n    const contractInstance = await tezos.wallet.at(address);\n    setSwapContractInstance(contractInstance);\n  }\n\n  const initFarmContract = async (tezos: TezosToolkit, address: string) => {\n    const contractInstance = await tezos.wallet.at(address);\n    setFarmContractInstance(contractInstance);\n  }\n\n  const updateSwapStorage = async (contractInstance: ContractAbstraction<Wallet>) => {\n    const newSwapStorage = await contractInstance.storage<any>();\n    setSwapStorage(newSwapStorage);\n  }\n\n  const updateFarmStorage = async (contractInstance: ContractAbstraction<Wallet>) => {\n    const newFarmStorage = await contractInstance.storage<FarmStorageInterface>();\n    setFarmStorage(newFarmStorage);\n  }\n\n  const updateFarmState = async (tezos: TezosToolkit, storage: FarmStorageInterface, swapStorage: any, user: string) => {\n    const delegator = user ? await delegatorRecord(tezos, storage) : undefined\n    const update = {\n      personalMaxDeposit: user ? await getPersonalMaxDeposit(swapStorage, user) : new BigNumber(0),\n      personalStake: delegator ? await getPersonalStake(delegator) : new BigNumber(0),\n      personalUnclaimedReward: delegator ? await delegatorReward(tezos, storage, delegator) : new BigNumber(0),\n      personalLastUpdate: delegator?.lastUpdate,\n      totalStaked: await getTotalStaked(storage),\n      APR: await estimateAPR(storage, swapStorage),\n    }\n    // update the current version of farm\n    setFarm((farm) => Object.assign({}, farm, update));\n  }\n\n  // creates contract instances\n  useEffect(() => {\n    initSwapContract(Tezos, swapContractAddress);\n  }, [Tezos, swapContractAddress]);\n\n  useEffect(() => {\n    initFarmContract(Tezos, farmContractAddress);\n  }, [Tezos, farmContractAddress]);\n\n  useEffect(() => {\n    if (swapContractInstance) {\n      updateSwapStorage(swapContractInstance)\n    }\n  }, [swapContractInstance])\n\n  useEffect(() => {\n    if (farmContractInstance) {\n      updateFarmStorage(farmContractInstance)\n    }\n  }, [farmContractInstance])\n\n  // periodically update balances\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (farmContractInstance) {\n        updateFarmStorage(farmContractInstance)\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [farmContractInstance]);\n\n  useEffect(() => {\n    if (Tezos && farmStorage && swapStorage) {\n      updateFarmState(Tezos, farmStorage, swapStorage, userAddress)\n    }\n  }, [Tezos, farmStorage, swapStorage, userAddress])\n\n  useEffect(() => {\n    const update = {\n      startDate: new Date(startDate),\n      endDate: new Date(endDate),\n    }\n    setFarm((farm) => Object.assign({}, farm, update));\n  }, [startDate, endDate])\n\n  //////////\n  /// CONTRACT INTERACTIONS\n  //////////\n\n  async function deposit() {\n    const amount = new BigNumber(depositValue).shiftedBy(farm.fromDecimals).decimalPlaces(0, BigNumber.ROUND_DOWN);\n    if (amount.isZero()) return\n\n    setDepoiting(true)\n    try {\n      await performDeposit(Tezos, swapContractInstance!, farmContractInstance!, swapStorage, amount)\n\n      // update UI\n      setShowDepositModal(false)\n      setDepositValue('0.00')\n      await updateFarmStorage(farmContractInstance!)\n    } catch (e) {\n      console.error(e)\n    }\n    setDepoiting(false)\n  }\n\n  async function claim() {\n    setClaiming(true)\n    try {\n      await performClaim(farmContractInstance!)\n\n      // update UI\n      await updateFarmStorage(farmContractInstance!)\n    } catch (e) {\n      console.error(e)\n    }\n    setClaiming(false)\n  }\n\n  async function withdraw() {\n    const amount = new BigNumber(unstakeValue).shiftedBy(farm.fromDecimals).decimalPlaces(0, BigNumber.ROUND_DOWN);\n    if (amount.isZero()) return\n\n    setWithdrawing(true)\n    try {\n      await performWithdraw(farmContractInstance!, amount)\n\n      // update UI\n      setShowWithdrawModal(false)\n      setUnstakeValue('0.00')\n      await updateFarmStorage(farmContractInstance!)\n    } catch (e) {\n      console.error(e)\n    }\n    setWithdrawing(false)\n  }\n\n  async function exit() {\n    const amount = farm.personalStake\n    if (!amount) return\n\n    setExiting(true)\n    try {\n      await performWithdraw(farmContractInstance!, amount)\n\n      // update UI\n      await updateFarmStorage(farmContractInstance!)\n    } catch (e) {\n      console.error(e)\n    }\n    setExiting(false)\n  }\n\n  return (\n    <div className=\"section bg-gray-1\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"farm\">\n            <div className=\"farm-title-wrapper\">\n              <div className=\"farm-titel\">\n                <div className=\"farm-titel-inlay\">\n                  <div style={{ textAlign: 'left' }}>\n                    <div>Total Staked</div>\n                    <div id=\"totalStaked\" className=\"totalstaked\">\n                      {farm.totalStaked?.shiftedBy(-farm.fromDecimals).toNumber().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: farm.fromDecimals })}&nbsp;${farm.fromSymbol}\n                    </div>\n                  </div>\n                  <div className=\"align-right\">\n                    <div>Farming APR</div>\n                    <div id=\"farmApy\" className=\"farmapy\">\n                      {farm.APR?.toFixed(2)}%\n                    </div>\n                  </div>\n                  <div\n                    data-w-id=\"e799ee40-c2cf-545d-1c77-b15068d00b93\"\n                    data-animation-type=\"lottie\"\n                    data-src=\"https://uploads-ssl.webflow.com/611628d3fab35c8d64c4b6e6/611628d3fab35c01c8c4b8e1_lf30_editor_qdh1yqpy.json\"\n                    data-loop=\"1\"\n                    data-direction=\"1\"\n                    data-autoplay=\"1\"\n                    data-is-ix2-target=\"0\"\n                    data-renderer=\"svg\"\n                    data-default-duration=\"1.6\"\n                    data-duration=\"1.6\"\n                    className=\"lottie-animation-copy\"\n                  ></div>\n                </div>\n              </div>\n              <div className=\"farm-title-coins\">\n                <div className=\"coin-top\">\n                  <div className=\"farm-coin\">\n                    <img\n                      src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/60911d04b9836a75b1dfa271_CVCA-COIN-ico-256.png\"\n                      loading=\"lazy\"\n                      id=\"tokenImageInput\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"farm-coin\">\n                    <img\n                      src=\"https://uploads-ssl.webflow.com/6091079111aa5aff3f19582d/6092c5a84ac959603b28b19c_1_ZdaWerzN9F7oIyhZEwcRqQ%20(1).jpeg\"\n                      loading=\"lazy\"\n                      id=\"tokenImageOutput\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <h5>\n              Deposit\n              &nbsp;\n              <span id=\"tokenNameInput\" className=\"tokennameinput\">\n                ${farm.fromSymbol}\n              </span>\n              &nbsp;\n              to earn\n              &nbsp;\n              <span id=\"tokenNameOutput\" className=\"tokennameoutput\">\n                ${farm.toSymbol}\n              </span>\n            </h5>\n\n            {Date.now() > farm.endDate.getTime() ? (\n              <div id=\"ended\" className=\"text-pill-tiny red\">\n                <div>Ended</div>\n              </div>\n            ) : (Date.now() > farm.startDate.getTime() ? (\n              <div id=\"active\" className=\"text-pill-tiny green\">\n                <div>Active</div>\n              </div>\n            ) : (\n              <div id=\"active\" className=\"text-pill-tiny blue\">\n                <div>In Preperation</div>\n              </div>\n            ))}\n\n            <div className=\"w-layout-grid farm-grid\">\n              <div className=\"label\">Start date</div>\n              <div id=\"startDate\" className=\"farm-startdate\">\n                {farm.startDate.toDateString()}\n              </div>\n              <div className=\"label\">End date</div>\n              <div id=\"endDate\" className=\"farm-enddate\">\n                {farm.endDate.toDateString()}\n              </div>\n              <div className=\"label\">Your stake <span style={{whiteSpace: 'nowrap'}}>(${farm.fromSymbol})</span></div>\n              <div id=\"yourStake\" className=\"farm-yourstake\">\n                {farm.personalStake?.shiftedBy(-farm.fromDecimals).toNumber().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: farm.fromDecimals })}\n              </div>\n              <div className=\"label\">Unclaimed reward (${farm.toSymbol})</div>\n              <div id=\"cvzaReward\" className=\"farm-cvzareward\">\n                {farm.personalUnclaimedReward?.shiftedBy(-farm.toDecimals).toNumber().toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: farm.toDecimals })}\n              </div>\n            </div>\n\n            {!userAddress && (\n              <div className=\"\">\n                <ConnectButton\n                  Tezos={Tezos}\n                  setWallet={setWallet}\n                  setUserAddress={setUserAddress}\n                  wallet={wallet}\n                  showNano={false}\n                />\n              </div>\n            )}\n\n            {userAddress && (\n              <div className=\"w-layout-grid\">\n                {/* Deposit */}\n                <button\n                  id=\"deposit\"\n                  onClick={() => setShowDepositModal(true)}\n                  disabled={depoiting || withdrawing || claiming}\n                  className={\n                    'farm-buttons w-node-_58d63a0e-4a37-39e2-c3d7-2d81eefd4bbe-8f74eee8 w-inline-block'\n                    + (!depoiting && !withdrawing && !claiming ? ' active' : '')\n                  }\n                >\n                  <div className=\"button-label-main\">\n                    {depoiting ? 'Depositing...' : 'Deposit'}\n                  </div>\n                  <div className=\"tiny-text _50\">\n                    Deposit\n                    {!farm.personalUnclaimedReward?.isZero() &&\n                      <> and claim</>\n                    }\n                  </div>\n                </button>\n\n                {/* Claim */}\n                <button\n                  id=\"claim\"\n                  onClick={() => claim()}\n                  disabled={depoiting || withdrawing || claiming || farm.personalUnclaimedReward?.isZero()}\n                  className={\n                    'farm-buttons w-node-_58d63a0e-4a37-39e2-c3d7-2d81eefd4bbe-8f74eee8 w-inline-block'\n                    + (farm.personalUnclaimedReward && !farm.personalUnclaimedReward.isZero() && !depoiting && !withdrawing && !claiming ? ' active' : '')\n                  }\n                >\n                  <div className=\"button-label-main\">\n                    {claiming ? 'Claiming...' : 'Claim'}\n                  </div>\n                  <div className=\"tiny-text _50\">\n                    <span className=\"tokennameoutput\">${farm.toSymbol}</span> reward\n                  </div>\n                </button>\n\n                {/* Withdraw */}\n                <button\n                  id=\"withdraw\"\n                  onClick={() => setShowWithdrawModal(true)}\n                  disabled={depoiting || withdrawing || claiming || farm.personalStake?.isZero()}\n                  className={\n                    'farm-buttons w-node-_58d63a0e-4a37-39e2-c3d7-2d81eefd4bbe-8f74eee8 w-inline-block '\n                    + (farm.personalStake && !farm.personalStake.isZero() && !depoiting && !withdrawing && !claiming ? 'active' : '')\n                  }\n                >\n                  <div className=\"button-label-main\">\n                    {withdrawing ? 'Withdrawing...' : 'Withdraw'}\n                  </div>\n                  <div className=\"tiny-text _50\">\n                    <span className=\"tokennameinput\">Withdraw and claim</span>\n                  </div>\n                </button>\n\n                {/* Exit */}\n                { false && (\n                <button\n                  id=\"exit\"\n                  onClick={() => exit()}\n                  disabled={exiting || depoiting || withdrawing || claiming || farm.personalStake?.isZero()}\n                  className={\n                    'farm-buttons w-node-_58d63a0e-4a37-39e2-c3d7-2d81eefd4bbe-8f74eee8 w-inline-block '\n                    + (farm.personalStake && !farm.personalStake!.isZero() && !exiting && !depoiting && !withdrawing && !claiming ? 'active' : '')\n                  }\n                >\n                  <div className=\"button-label-main\">\n                    {exiting ? 'Exiting...' : 'Exit'}\n                  </div>\n                  <div className=\"tiny-text _50\">\n                    Withdraw and claim\n                  </div>\n                </button>\n                )}\n\n                {/* Disconnect */}\n                <DisconnectButton\n                  wallet={wallet}\n                  setUserAddress={setUserAddress}\n                  setWallet={setWallet}\n                  setTezos={setTezos}\n                />\n              </div>\n            )}\n          </div>\n\n          {showDepositModal &&\n            <DepositModal\n              hideDepositModal={() => setShowDepositModal(false)}\n              depositValue={depositValue}\n              setDepositValue={setDepositValue}\n              personalMaxDeposit={(farm.personalMaxDeposit || new BigNumber(0)).shiftedBy(-farm.fromDecimals)}\n              personalStake={(farm.personalStake || new BigNumber(0)).shiftedBy(-farm.fromDecimals)}\n              deposit={deposit}\n              depositing={depoiting}\n              symbol={farm.fromSymbol}\n              penalty={farmStorage?.farm.penalty}\n              personalLastUpdate={farm.personalLastUpdate}\n            ></DepositModal>\n          }\n\n          {showWithdrawModal &&\n            <WithdrawModal\n              hideWithdrawModal={() => setShowWithdrawModal(false)}\n              withdrawValue={unstakeValue}\n              setWithdrawValue={setUnstakeValue}\n              personalStake={(farm.personalStake || new BigNumber(0)).shiftedBy(-farm.fromDecimals)}\n              withdraw={withdraw}\n              withdrawing={withdrawing}\n              symbol={farm.fromSymbol}\n              penalty={farmStorage?.farm.penalty}\n              personalLastUpdate={farm.personalLastUpdate}\n            ></WithdrawModal>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Farm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport PriceChart from \"./PriceChart\";\nimport Farm from \"./Farm\";\n\n// init exchange\nconst appNode = document.getElementById(\"root\");\nif (appNode) {\n  if (!appNode.dataset.swapContract) {\n    console.error('Please specify data-swap-contract for your buy form.')\n  } else {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App \n          swapContract={appNode.dataset.swapContract}\n        />\n      </React.StrictMode>,\n      appNode\n    );\n  }\n}\n\n\n// init Price display\nconst priceChartNode = document.getElementById(\"price-chart\");\nif (priceChartNode) {\n  if (!priceChartNode.dataset.swapContract) {\n    console.error('Please specify data-swap-contract for your price chart.')\n  } else {\n    const decimals = parseInt(priceChartNode.dataset.tokenDecimals || '')\n    ReactDOM.render(\n      <React.StrictMode>\n        <PriceChart \n          swapContract={priceChartNode.dataset.swapContract}\n          tokenDecimals={decimals || undefined}\n        />\n      </React.StrictMode>,\n      priceChartNode\n    );\n  }\n}\n\n// init farm display\nconst farmNode = document.getElementById(\"farm\");\nif (farmNode) {\n  if (!farmNode.dataset.swapContract) {\n    console.error('Please specify data-swap-contract for your farm.')\n  } else if(!farmNode.dataset.farmContract) {\n    console.error('Please specify data-farm-contract for your farm.')\n  } else if(!farmNode.dataset.startDate) {\n    console.error('Please specify data-start-date for your farm.')\n  } else if(!farmNode.dataset.endDate) {\n    console.error('Please specify data-end-date for your farm.')\n  } else {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Farm\n          farmContractAddress={farmNode.dataset.farmContract}\n          swapContractAddress={farmNode.dataset.swapContract}\n          startDate={farmNode.dataset.startDate}\n          endDate={farmNode.dataset.endDate}\n        />\n      </React.StrictMode>,\n      farmNode\n    );\n  }\n}"],"sourceRoot":""}